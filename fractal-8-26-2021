module Examples
 
  def self.createBox(layout, cell_id, layer_id)
      edge = RBA::Edge.new(RBA::Point::new(0, 0), RBA::Point::new(1000, 0))
     layout.cell(cell_id).shapes(layer_id).insert_edge(edge) 
  
     edge = RBA::Edge.new(RBA::Point::new(1000, 0), RBA::Point::new(1000, 1000))
     layout.cell(cell_id).shapes(layer_id).insert_edge(edge) 
  
  end

  
  def self.create_recursion(layout, cell_id, layer_id, rec_level, isFirst)
    
    if rec_level > 2
      edge = RBA::Edge.new(RBA::Point::new(0, 0), RBA::Point::new(1000, 0))
    layout.cell(cell_id).shapes(layer_id).insert_edge(edge)

  
    else
      new_cell = layout.add_cell("level" + rec_level.to_s)      
      cell = layout.cell(cell_id)
    
     if(isFirst) 
         insts = [
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0, 0.0, false, RBA::DPoint::new(0.0, 0.0))),
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0, 90.0, false, RBA::DPoint::new(250, 0.0))),
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0, 0.0, false, RBA::DPoint::new(250, 250))),
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(2.0, -90.0, false, RBA::DPoint::new(500, 250))),
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0, 0.0, false, RBA::DPoint::new(500, -250))),
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0, 90.0, false, RBA::DPoint::new(750, -250))),
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0, 0.0, false, RBA::DPoint::new(750, 0))) 


          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0, 90.0, false, RBA::DPoint::new(1000.0, 0.0))),
         RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0, 0.0, false, RBA::DPoint::new(1000, 1000))),
        RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0, -90.0, false, RBA::DPoint::new(2000, 1000))),
         RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0, -180.0, false, RBA::DPoint::new(2000, 0))),

    ]
     
   insts.each { |i| cell.insert(i) }
      else
        print("adding else")
         insts = [
         
                   RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 0.0, false, RBA::DPoint::new(0.0, 0.0))),
          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 90.0, false, RBA::DPoint::new(250, 0.0))),
          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 0.0, false, RBA::DPoint::new(250, 250))),
          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(2.0/4.0, -90.0, false, RBA::DPoint::new(500, 250))),
          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 0.0, false, RBA::DPoint::new(500, -250))),
          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 90.0, false, RBA::DPoint::new(750, -250))),
          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 0.0, false, RBA::DPoint::new(750, 0))) 
         
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 0.0, false, RBA::DPoint::new(0.0, 0.0))),
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 90.0, false, RBA::DPoint::new(250/4.0, 0.0))),
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 0.0, false, RBA::DPoint::new(250/4.0, 250/4.0))),
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(2.0/4.0, -90.0, false, RBA::DPoint::new(500/4.0, 250/4.0))),
 #         RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 0.0, false, RBA::DPoint::new(500/4.0, -125/4.0))),
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 90.0, false, RBA::DPoint::new(750/4.0, -125/4.0))),
#          RBA::CellInstArray::new(new_cell, RBA::CplxTrans::new(1.0/4.0, 0.0, false, RBA::DPoint::new(750/4.0, 0.0)))    
    

    ]
     
   insts.each { |i| cell.insert(i) }
        
      end
      create_recursion(layout, new_cell, layer_id, rec_level + 1, false)
  
    end
  
  end    
  
  app = RBA::Application.instance
  mw = app.main_window
  
  mw.create_layout(0)
  view = mw.current_view  

  layout = view.cellview(0).layout 
  linfo = RBA::LayerInfo.new 
  layer_id = layout.insert_layer(linfo)
  
  ln = RBA::LayerPropertiesNode::new
  ln.dither_pattern = 0
  ln.fill_color = 0xffff00
  ln.frame_color = 0xAACAAA
  ln.width = 4
  ln.source_layer_index = layer_id
  view.insert_layer(view.end_layers, ln)
  
  topcell_id = layout.add_cell("top")
  create_recursion(layout, topcell_id, layer_id, 1, true)
  view.select_cell_path([topcell_id], 0)
  view.update_content
  view.zoom_fit
  view.max_hier
  
  
  


end
